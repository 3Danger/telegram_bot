run:
  go: "1.21"
  timeout: 5m
#  skip-dirs:
#    - (\/|^)gen(\/|$)
linters:
  enable-all: false
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - exhaustive
    - exhaustruct
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - mnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - gosmopolitan
    - govet
    - grouper
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint
linters-settings:
  gci:
    sections:
      - standard
      - default
      - prefix(github.com/3Danger)
    section-separators:
      - newLine
  godox:
    keywords:
      - BUG
      - FIXME
  gocyclo:
    min-complexity: 20
  cyclop:
    max-complexity: 20
  nestif:
    min-complexity: 10
  dupl:
    threshold: 160
  funlen:
    lines: 80
    statements: 40
  gosec:
    excludes:
      - G402
  tagliatelle:
    case:
      use-field-name: false
      rules:
        json: snake
        yaml: camel
        xml: camel
        bson: camel
        avro: snake
        mapstructure: kebab
  wrapcheck:
    ignoreSigs:
      - .Errorf(
      - errors.New(
      - errors.Unwrap(
      - .Wrap(
      - .Wrapf(
      - .WithMessage(
      - .WithMessagef(
      - .WithStack(
  interfacebloat:
    max: 20
  errorlint:
    asserts: false
issues:
  max-same: 0
  max-per-linter: 0
  exclude-rules:
    - path: "cmd"
      linters:
        - revive
        - wsl
        - perfsprint
        - nolintlint

    - path: "_test.go"
      linters:
        - wsl
        - revive
        - inamedparam
        - nolintlint

    - path: "internal/build"
      linters:
        - revive
        - perfsprint

    - path: "internal/journallog"
      linters:
        - perfsprint
        - nolintlint
        - lll

    - path: "internal/item"
      linters:
        - lll
        - nolintlint

    - path: "internal/config"
      linters:
        - perfsprint
        - exhaustruct
        - nolintlint

    - path: "internal/note"
      linters:
        - nolintlint

    - source: "^//go:generate "
      linters:
        - lll

    - text: "exported: comment on exported"
      linters:
        - revive

    - text: "package-comments: package comment should be of the form"
      linters:
        - revive

    - text: "should have a package comment"
      linters:
        - stylecheck
        - revive

    - text: "should have comment or be unexported"
      linters:
        - stylecheck
        - revive

    - text: "or a comment on this block"
      linters:
        - stylecheck
        - revive
  exclude-use-default: false
