// Code generated by gowrap. DO NOT EDIT.
// template: ../../../../gowrap/skip_no_rows.tmpl
// gowrap: http://github.com/hexdigest/gowrap

package wrappers

//go:generate gowrap gen -p github.com/3Danger/telegram_bot/internal/repo/user/postgres -i Querier -t ../../../../gowrap/skip_no_rows.tmpl -o skip_no_rows.go -l ""

import (
	"context"

	_sourcePostgres "github.com/3Danger/telegram_bot/internal/repo/user/postgres"
	"github.com/jackc/pgx/v5"
	"github.com/pkg/errors"
)

type querierWithMetrics struct {
	base _sourcePostgres.Querier
}

func WithSkipNoRows(base _sourcePostgres.Querier) _sourcePostgres.Querier {
	return &querierWithMetrics{
		base: base,
	}
}

func (d *querierWithMetrics) Delete(ctx context.Context, id int64) (err error) {
	err = d.base.Delete(ctx, id)

	if errors.Is(err, pgx.ErrNoRows) {
		err = nil
		return err
	}

	return err
}

func (d *querierWithMetrics) Get(ctx context.Context, id int64) (up1 *_sourcePostgres.User, err error) {
	up1, err = d.base.Get(ctx, id)

	if errors.Is(err, pgx.ErrNoRows) {
		err = nil
		return up1, err
	}

	return up1, err
}

func (d *querierWithMetrics) Upsert(ctx context.Context, arg *_sourcePostgres.UpsertParams) (err error) {
	err = d.base.Upsert(ctx, arg)

	if errors.Is(err, pgx.ErrNoRows) {
		err = nil
		return err
	}

	return err
}
